services:
    chat-server:
        build: ./chat-server
        ports:
            - "8081:8081"
        restart: always
        environment:
            MONGODB_URI: ${MONGODB_URI}
            LOGGING_URL: ${LOGGING_URL}
        env_file:
            - .env

    frontend-viewer-dev:
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        ports:
            - "4200:4200"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        command: npm run start -- --project viewer --host 0.0.0.0 --poll=1000
        environment:
            - CHOKIDAR_USEPOLLING=true

    frontend-streamer-dev: # Renamed to clearly indicate it's for development
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev # Use the development Dockerfile
            args:
                APP_NAME: streamer
        ports:
            - "4300:4200" # Map host port 4300 to Angular dev server port 4200
        volumes:
            - ./frontend:/app # Mount your local frontend folder into the container
            - /app/node_modules # Important for node_modules to be managed within the container
        command: npm run start -- --project streamer --host 0.0.0.0 --poll=1000 # Specify the project and enable polling
        environment:
        - CHOKIDAR_USEPOLLING=true # Enable Chokidar polling for better file watching

    # streaming-server:
    #     build: ./streaming-server
    #     ports:
    #         - "3002:3002" # RTMP ingest
    #         # - "8080:80" # HLS stream
    #     volumes:
    #         - streaming-hls:/var/www/hls
    #         - streaming-recordings:/var/www/recordings
    #     command: npm run start -- --host 0.0.0.0 --port 3002
    #     environment:
    #         MONGODB_URI: ${MONGODB_URI}
    #         HMAC_SECRET: ${HMAC_SECRET}
    #         LOGGING_URL: ${LOGGING_SERVICE_URL}
    #     env_file:
    #         - .env
    #     restart: always

    truyou-auth:
      build: ./truyou-auth
      ports:
        - "3000:3000"
      restart: always
      environment:
        MONGO_URI: ${MONGODB_URI}
      env_file:
        - .env

    logging-service:
        build: ./logging-service
        ports:
            - "5200:5200"
        restart: always
        environment:
            MONGO_URI: ${MONGODB_URI} # Adjust log level as needed
            PORT: "5200"
            HMAC_SECRET: ${HMAC_SECRET}
        env_file:
            - .env

volumes:
    streaming-hls:
    streaming-recordings: